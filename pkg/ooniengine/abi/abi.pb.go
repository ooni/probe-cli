// OONI Engine binary ABI.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: abi.proto

package abi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enumerates all possible log levels.
type LogLevel int32

const (
	// The DEBUG log level.
	LogLevel_DEBUG LogLevel = 0
	// The INFO log level.
	LogLevel_INFO LogLevel = 1
	// The WARNING log level.
	LogLevel_WARNING LogLevel = 2
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "WARNING",
	}
	LogLevel_value = map[string]int32{
		"DEBUG":   0,
		"INFO":    1,
		"WARNING": 2,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_abi_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_abi_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{0}
}

// A log message emitted by the engine.
type LogEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level   LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=abi.LogLevel" json:"level,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{0}
}

func (x *LogEvent) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_DEBUG
}

func (x *LogEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Contains settings for creating a session.
type SessionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel         LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=abi.LogLevel" json:"log_level,omitempty"`
	ProbeServicesUrl string   `protobuf:"bytes,2,opt,name=probe_services_url,json=probeServicesUrl,proto3" json:"probe_services_url,omitempty"`
	ProxyUrl         string   `protobuf:"bytes,3,opt,name=proxy_url,json=proxyUrl,proto3" json:"proxy_url,omitempty"`
	SoftwareName     string   `protobuf:"bytes,4,opt,name=software_name,json=softwareName,proto3" json:"software_name,omitempty"`
	SoftwareVersion  string   `protobuf:"bytes,5,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	StateDir         string   `protobuf:"bytes,6,opt,name=state_dir,json=stateDir,proto3" json:"state_dir,omitempty"`
	TempDir          string   `protobuf:"bytes,7,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
	TorArgs          []string `protobuf:"bytes,8,rep,name=tor_args,json=torArgs,proto3" json:"tor_args,omitempty"`
	TorBinary        string   `protobuf:"bytes,9,opt,name=tor_binary,json=torBinary,proto3" json:"tor_binary,omitempty"`
	TunnelDir        string   `protobuf:"bytes,10,opt,name=tunnel_dir,json=tunnelDir,proto3" json:"tunnel_dir,omitempty"`
}

func (x *SessionConfig) Reset() {
	*x = SessionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionConfig) ProtoMessage() {}

func (x *SessionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionConfig.ProtoReflect.Descriptor instead.
func (*SessionConfig) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{1}
}

func (x *SessionConfig) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_DEBUG
}

func (x *SessionConfig) GetProbeServicesUrl() string {
	if x != nil {
		return x.ProbeServicesUrl
	}
	return ""
}

func (x *SessionConfig) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

func (x *SessionConfig) GetSoftwareName() string {
	if x != nil {
		return x.SoftwareName
	}
	return ""
}

func (x *SessionConfig) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *SessionConfig) GetStateDir() string {
	if x != nil {
		return x.StateDir
	}
	return ""
}

func (x *SessionConfig) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

func (x *SessionConfig) GetTorArgs() []string {
	if x != nil {
		return x.TorArgs
	}
	return nil
}

func (x *SessionConfig) GetTorBinary() string {
	if x != nil {
		return x.TorBinary
	}
	return ""
}

func (x *SessionConfig) GetTunnelDir() string {
	if x != nil {
		return x.TunnelDir
	}
	return ""
}

// Contains config for starting the GeoIP task.
type GeoIPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *SessionConfig `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *GeoIPConfig) Reset() {
	*x = GeoIPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoIPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIPConfig) ProtoMessage() {}

func (x *GeoIPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoIPConfig.ProtoReflect.Descriptor instead.
func (*GeoIPConfig) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{2}
}

func (x *GeoIPConfig) GetSession() *SessionConfig {
	if x != nil {
		return x.Session
	}
	return nil
}

// Event emitted when the GeoIP lookup has completed.
type GeoIPEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure             string `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	ProbeIp             string `protobuf:"bytes,2,opt,name=probe_ip,json=probeIp,proto3" json:"probe_ip,omitempty"`
	ProbeAsn            string `protobuf:"bytes,3,opt,name=probe_asn,json=probeAsn,proto3" json:"probe_asn,omitempty"`
	ProbeCc             string `protobuf:"bytes,4,opt,name=probe_cc,json=probeCc,proto3" json:"probe_cc,omitempty"`
	ProbeNetworkName    string `protobuf:"bytes,5,opt,name=probe_network_name,json=probeNetworkName,proto3" json:"probe_network_name,omitempty"`
	ResolverIp          string `protobuf:"bytes,6,opt,name=resolver_ip,json=resolverIp,proto3" json:"resolver_ip,omitempty"`
	ResolverAsn         string `protobuf:"bytes,7,opt,name=resolver_asn,json=resolverAsn,proto3" json:"resolver_asn,omitempty"`
	ResolverNetworkName string `protobuf:"bytes,8,opt,name=resolver_network_name,json=resolverNetworkName,proto3" json:"resolver_network_name,omitempty"`
}

func (x *GeoIPEvent) Reset() {
	*x = GeoIPEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoIPEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIPEvent) ProtoMessage() {}

func (x *GeoIPEvent) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoIPEvent.ProtoReflect.Descriptor instead.
func (*GeoIPEvent) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{3}
}

func (x *GeoIPEvent) GetFailure() string {
	if x != nil {
		return x.Failure
	}
	return ""
}

func (x *GeoIPEvent) GetProbeIp() string {
	if x != nil {
		return x.ProbeIp
	}
	return ""
}

func (x *GeoIPEvent) GetProbeAsn() string {
	if x != nil {
		return x.ProbeAsn
	}
	return ""
}

func (x *GeoIPEvent) GetProbeCc() string {
	if x != nil {
		return x.ProbeCc
	}
	return ""
}

func (x *GeoIPEvent) GetProbeNetworkName() string {
	if x != nil {
		return x.ProbeNetworkName
	}
	return ""
}

func (x *GeoIPEvent) GetResolverIp() string {
	if x != nil {
		return x.ResolverIp
	}
	return ""
}

func (x *GeoIPEvent) GetResolverAsn() string {
	if x != nil {
		return x.ResolverAsn
	}
	return ""
}

func (x *GeoIPEvent) GetResolverNetworkName() string {
	if x != nil {
		return x.ResolverNetworkName
	}
	return ""
}

// Settings for the ExperimentMetaInfo call.
type ExperimentMetaInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExperimentMetaInfoRequest) Reset() {
	*x = ExperimentMetaInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentMetaInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentMetaInfoRequest) ProtoMessage() {}

func (x *ExperimentMetaInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentMetaInfoRequest.ProtoReflect.Descriptor instead.
func (*ExperimentMetaInfoRequest) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{4}
}

// Information about an experiment.
type ExperimentMetaInfoEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UsesInput bool   `protobuf:"varint,2,opt,name=uses_input,json=usesInput,proto3" json:"uses_input,omitempty"`
}

func (x *ExperimentMetaInfoEntry) Reset() {
	*x = ExperimentMetaInfoEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentMetaInfoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentMetaInfoEntry) ProtoMessage() {}

func (x *ExperimentMetaInfoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentMetaInfoEntry.ProtoReflect.Descriptor instead.
func (*ExperimentMetaInfoEntry) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{5}
}

func (x *ExperimentMetaInfoEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExperimentMetaInfoEntry) GetUsesInput() bool {
	if x != nil {
		return x.UsesInput
	}
	return false
}

// Result of the ExperimentMetaInfo call.
type ExperimentMetaInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*ExperimentMetaInfoEntry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *ExperimentMetaInfoResponse) Reset() {
	*x = ExperimentMetaInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentMetaInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentMetaInfoResponse) ProtoMessage() {}

func (x *ExperimentMetaInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentMetaInfoResponse.ProtoReflect.Descriptor instead.
func (*ExperimentMetaInfoResponse) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{6}
}

func (x *ExperimentMetaInfoResponse) GetEntry() []*ExperimentMetaInfoEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// Configuration for running a nettest.
type NettestConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Annotations    map[string]string `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraOptions   string            `protobuf:"bytes,2,opt,name=extra_options,json=extraOptions,proto3" json:"extra_options,omitempty"`
	Inputs         []string          `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	InputFilePaths []string          `protobuf:"bytes,4,rep,name=input_file_paths,json=inputFilePaths,proto3" json:"input_file_paths,omitempty"`
	MaxRuntime     int64             `protobuf:"varint,5,opt,name=max_runtime,json=maxRuntime,proto3" json:"max_runtime,omitempty"`
	Name           string            `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	NoCollector    bool              `protobuf:"varint,7,opt,name=no_collector,json=noCollector,proto3" json:"no_collector,omitempty"`
	NoJson         bool              `protobuf:"varint,8,opt,name=no_json,json=noJson,proto3" json:"no_json,omitempty"`
	Random         bool              `protobuf:"varint,9,opt,name=random,proto3" json:"random,omitempty"`
	ReportFile     string            `protobuf:"bytes,10,opt,name=report_file,json=reportFile,proto3" json:"report_file,omitempty"`
	Session        *SessionConfig    `protobuf:"bytes,11,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *NettestConfig) Reset() {
	*x = NettestConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NettestConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NettestConfig) ProtoMessage() {}

func (x *NettestConfig) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NettestConfig.ProtoReflect.Descriptor instead.
func (*NettestConfig) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{7}
}

func (x *NettestConfig) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *NettestConfig) GetExtraOptions() string {
	if x != nil {
		return x.ExtraOptions
	}
	return ""
}

func (x *NettestConfig) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *NettestConfig) GetInputFilePaths() []string {
	if x != nil {
		return x.InputFilePaths
	}
	return nil
}

func (x *NettestConfig) GetMaxRuntime() int64 {
	if x != nil {
		return x.MaxRuntime
	}
	return 0
}

func (x *NettestConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NettestConfig) GetNoCollector() bool {
	if x != nil {
		return x.NoCollector
	}
	return false
}

func (x *NettestConfig) GetNoJson() bool {
	if x != nil {
		return x.NoJson
	}
	return false
}

func (x *NettestConfig) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *NettestConfig) GetReportFile() string {
	if x != nil {
		return x.ReportFile
	}
	return ""
}

func (x *NettestConfig) GetSession() *SessionConfig {
	if x != nil {
		return x.Session
	}
	return nil
}

// ProgressEvent represents an experiment making progress.
type ProgressEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage float64 `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Message    string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ProgressEvent) Reset() {
	*x = ProgressEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressEvent) ProtoMessage() {}

func (x *ProgressEvent) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressEvent.ProtoReflect.Descriptor instead.
func (*ProgressEvent) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{8}
}

func (x *ProgressEvent) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *ProgressEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// DataUsageEvent represents the data consumed by an experiment.
type DataUsageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KibiBytesSent     float64 `protobuf:"fixed64,1,opt,name=kibi_bytes_sent,json=kibiBytesSent,proto3" json:"kibi_bytes_sent,omitempty"`
	KibiBytesReceived float64 `protobuf:"fixed64,2,opt,name=kibi_bytes_received,json=kibiBytesReceived,proto3" json:"kibi_bytes_received,omitempty"`
}

func (x *DataUsageEvent) Reset() {
	*x = DataUsageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataUsageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataUsageEvent) ProtoMessage() {}

func (x *DataUsageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataUsageEvent.ProtoReflect.Descriptor instead.
func (*DataUsageEvent) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{9}
}

func (x *DataUsageEvent) GetKibiBytesSent() float64 {
	if x != nil {
		return x.KibiBytesSent
	}
	return 0
}

func (x *DataUsageEvent) GetKibiBytesReceived() float64 {
	if x != nil {
		return x.KibiBytesReceived
	}
	return 0
}

// SubmitEvent is the result of submitting a measurement.
type SubmitEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotSubmitted bool   `protobuf:"varint,1,opt,name=not_submitted,json=notSubmitted,proto3" json:"not_submitted,omitempty"`
	Failure      string `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"`
	Index        int64  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Input        string `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	ReportId     string `protobuf:"bytes,5,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Measurement  string `protobuf:"bytes,6,opt,name=measurement,proto3" json:"measurement,omitempty"`
}

func (x *SubmitEvent) Reset() {
	*x = SubmitEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitEvent) ProtoMessage() {}

func (x *SubmitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitEvent.ProtoReflect.Descriptor instead.
func (*SubmitEvent) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitEvent) GetNotSubmitted() bool {
	if x != nil {
		return x.NotSubmitted
	}
	return false
}

func (x *SubmitEvent) GetFailure() string {
	if x != nil {
		return x.Failure
	}
	return ""
}

func (x *SubmitEvent) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SubmitEvent) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *SubmitEvent) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *SubmitEvent) GetMeasurement() string {
	if x != nil {
		return x.Measurement
	}
	return ""
}

// Description of nettest according to OONI Run v2.
type OONIRunV2DescriptorNettest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Annotations map[string]string `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Inputs      []string          `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Options     string            `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	TestName    string            `protobuf:"bytes,4,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
}

func (x *OONIRunV2DescriptorNettest) Reset() {
	*x = OONIRunV2DescriptorNettest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OONIRunV2DescriptorNettest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OONIRunV2DescriptorNettest) ProtoMessage() {}

func (x *OONIRunV2DescriptorNettest) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OONIRunV2DescriptorNettest.ProtoReflect.Descriptor instead.
func (*OONIRunV2DescriptorNettest) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{11}
}

func (x *OONIRunV2DescriptorNettest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *OONIRunV2DescriptorNettest) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *OONIRunV2DescriptorNettest) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *OONIRunV2DescriptorNettest) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

// OONI Run v2 descriptor.
type OONIRunV2Descriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Author      string                        `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Nettests    []*OONIRunV2DescriptorNettest `protobuf:"bytes,4,rep,name=nettests,proto3" json:"nettests,omitempty"`
}

func (x *OONIRunV2Descriptor) Reset() {
	*x = OONIRunV2Descriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OONIRunV2Descriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OONIRunV2Descriptor) ProtoMessage() {}

func (x *OONIRunV2Descriptor) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OONIRunV2Descriptor.ProtoReflect.Descriptor instead.
func (*OONIRunV2Descriptor) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{12}
}

func (x *OONIRunV2Descriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OONIRunV2Descriptor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OONIRunV2Descriptor) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *OONIRunV2Descriptor) GetNettests() []*OONIRunV2DescriptorNettest {
	if x != nil {
		return x.Nettests
	}
	return nil
}

type OONIRunV2MeasureDescriptorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxRuntime  int64          `protobuf:"varint,1,opt,name=max_runtime,json=maxRuntime,proto3" json:"max_runtime,omitempty"`
	NoCollector bool           `protobuf:"varint,2,opt,name=no_collector,json=noCollector,proto3" json:"no_collector,omitempty"`
	NoJson      bool           `protobuf:"varint,3,opt,name=no_json,json=noJson,proto3" json:"no_json,omitempty"`
	Random      bool           `protobuf:"varint,4,opt,name=random,proto3" json:"random,omitempty"`
	ReportFile  string         `protobuf:"bytes,5,opt,name=report_file,json=reportFile,proto3" json:"report_file,omitempty"`
	Session     *SessionConfig `protobuf:"bytes,6,opt,name=session,proto3" json:"session,omitempty"`
	// Implementation note: it seems descriptor is a ~reserved
	// field name in protobuf v3, so let's not use it
	V2Descriptor *OONIRunV2Descriptor `protobuf:"bytes,7,opt,name=v2_descriptor,json=v2Descriptor,proto3" json:"v2_descriptor,omitempty"`
}

func (x *OONIRunV2MeasureDescriptorConfig) Reset() {
	*x = OONIRunV2MeasureDescriptorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OONIRunV2MeasureDescriptorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OONIRunV2MeasureDescriptorConfig) ProtoMessage() {}

func (x *OONIRunV2MeasureDescriptorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_abi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OONIRunV2MeasureDescriptorConfig.ProtoReflect.Descriptor instead.
func (*OONIRunV2MeasureDescriptorConfig) Descriptor() ([]byte, []int) {
	return file_abi_proto_rawDescGZIP(), []int{13}
}

func (x *OONIRunV2MeasureDescriptorConfig) GetMaxRuntime() int64 {
	if x != nil {
		return x.MaxRuntime
	}
	return 0
}

func (x *OONIRunV2MeasureDescriptorConfig) GetNoCollector() bool {
	if x != nil {
		return x.NoCollector
	}
	return false
}

func (x *OONIRunV2MeasureDescriptorConfig) GetNoJson() bool {
	if x != nil {
		return x.NoJson
	}
	return false
}

func (x *OONIRunV2MeasureDescriptorConfig) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *OONIRunV2MeasureDescriptorConfig) GetReportFile() string {
	if x != nil {
		return x.ReportFile
	}
	return ""
}

func (x *OONIRunV2MeasureDescriptorConfig) GetSession() *SessionConfig {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *OONIRunV2MeasureDescriptorConfig) GetV2Descriptor() *OONIRunV2Descriptor {
	if x != nil {
		return x.V2Descriptor
	}
	return nil
}

var File_abi_proto protoreflect.FileDescriptor

var file_abi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x62, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x62, 0x69,
	0x22, 0x49, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x62,
	0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe7, 0x02, 0x0a, 0x0d,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x72, 0x5f, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x72,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x44, 0x69, 0x72, 0x22, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x49, 0x50, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x9f, 0x02, 0x0a, 0x0a, 0x47, 0x65, 0x6f, 0x49, 0x50, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f,
	0x61, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x65,
	0x41, 0x73, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x63, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x63, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x41, 0x73, 0x6e,
	0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x4c, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0x50, 0x0a, 0x1a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x62, 0x69, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0xd5, 0x03, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x4e,
	0x65, 0x74, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x4a, 0x73,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x62, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6b, 0x69, 0x62, 0x69, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x6b, 0x69, 0x62, 0x69, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x6b, 0x69, 0x62, 0x69, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6b, 0x69, 0x62,
	0x69, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xb7,
	0x01, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x1a, 0x4f, 0x4f, 0x4e,
	0x49, 0x52, 0x75, 0x6e, 0x56, 0x32, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x4e, 0x65, 0x74, 0x74, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61,
	0x62, 0x69, 0x2e, 0x4f, 0x4f, 0x4e, 0x49, 0x52, 0x75, 0x6e, 0x56, 0x32, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x74, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x4f,
	0x4f, 0x4e, 0x49, 0x52, 0x75, 0x6e, 0x56, 0x32, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x3b, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x4f, 0x4f, 0x4e, 0x49, 0x52, 0x75, 0x6e,
	0x56, 0x32, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x74, 0x65, 0x73, 0x74, 0x73, 0x22, 0xa5, 0x02,
	0x0a, 0x20, 0x4f, 0x4f, 0x4e, 0x49, 0x52, 0x75, 0x6e, 0x56, 0x32, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x69, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x76, 0x32, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x62, 0x69, 0x2e, 0x4f, 0x4f, 0x4e, 0x49, 0x52, 0x75, 0x6e, 0x56, 0x32, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x76, 0x32, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2a, 0x2c, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x6b, 0x67, 0x2f, 0x6f, 0x6f, 0x6e, 0x69, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x62, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_abi_proto_rawDescOnce sync.Once
	file_abi_proto_rawDescData = file_abi_proto_rawDesc
)

func file_abi_proto_rawDescGZIP() []byte {
	file_abi_proto_rawDescOnce.Do(func() {
		file_abi_proto_rawDescData = protoimpl.X.CompressGZIP(file_abi_proto_rawDescData)
	})
	return file_abi_proto_rawDescData
}

var file_abi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_abi_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_abi_proto_goTypes = []interface{}{
	(LogLevel)(0),                            // 0: abi.LogLevel
	(*LogEvent)(nil),                         // 1: abi.LogEvent
	(*SessionConfig)(nil),                    // 2: abi.SessionConfig
	(*GeoIPConfig)(nil),                      // 3: abi.GeoIPConfig
	(*GeoIPEvent)(nil),                       // 4: abi.GeoIPEvent
	(*ExperimentMetaInfoRequest)(nil),        // 5: abi.ExperimentMetaInfoRequest
	(*ExperimentMetaInfoEntry)(nil),          // 6: abi.ExperimentMetaInfoEntry
	(*ExperimentMetaInfoResponse)(nil),       // 7: abi.ExperimentMetaInfoResponse
	(*NettestConfig)(nil),                    // 8: abi.NettestConfig
	(*ProgressEvent)(nil),                    // 9: abi.ProgressEvent
	(*DataUsageEvent)(nil),                   // 10: abi.DataUsageEvent
	(*SubmitEvent)(nil),                      // 11: abi.SubmitEvent
	(*OONIRunV2DescriptorNettest)(nil),       // 12: abi.OONIRunV2DescriptorNettest
	(*OONIRunV2Descriptor)(nil),              // 13: abi.OONIRunV2Descriptor
	(*OONIRunV2MeasureDescriptorConfig)(nil), // 14: abi.OONIRunV2MeasureDescriptorConfig
	nil,                                      // 15: abi.NettestConfig.AnnotationsEntry
	nil,                                      // 16: abi.OONIRunV2DescriptorNettest.AnnotationsEntry
}
var file_abi_proto_depIdxs = []int32{
	0,  // 0: abi.LogEvent.level:type_name -> abi.LogLevel
	0,  // 1: abi.SessionConfig.log_level:type_name -> abi.LogLevel
	2,  // 2: abi.GeoIPConfig.session:type_name -> abi.SessionConfig
	6,  // 3: abi.ExperimentMetaInfoResponse.entry:type_name -> abi.ExperimentMetaInfoEntry
	15, // 4: abi.NettestConfig.annotations:type_name -> abi.NettestConfig.AnnotationsEntry
	2,  // 5: abi.NettestConfig.session:type_name -> abi.SessionConfig
	16, // 6: abi.OONIRunV2DescriptorNettest.annotations:type_name -> abi.OONIRunV2DescriptorNettest.AnnotationsEntry
	12, // 7: abi.OONIRunV2Descriptor.nettests:type_name -> abi.OONIRunV2DescriptorNettest
	2,  // 8: abi.OONIRunV2MeasureDescriptorConfig.session:type_name -> abi.SessionConfig
	13, // 9: abi.OONIRunV2MeasureDescriptorConfig.v2_descriptor:type_name -> abi.OONIRunV2Descriptor
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_abi_proto_init() }
func file_abi_proto_init() {
	if File_abi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_abi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoIPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoIPEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentMetaInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentMetaInfoEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentMetaInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NettestConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataUsageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OONIRunV2DescriptorNettest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OONIRunV2Descriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OONIRunV2MeasureDescriptorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_abi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_abi_proto_goTypes,
		DependencyIndexes: file_abi_proto_depIdxs,
		EnumInfos:         file_abi_proto_enumTypes,
		MessageInfos:      file_abi_proto_msgTypes,
	}.Build()
	File_abi_proto = out.File
	file_abi_proto_rawDesc = nil
	file_abi_proto_goTypes = nil
	file_abi_proto_depIdxs = nil
}
