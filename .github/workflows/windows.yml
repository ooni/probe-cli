# File generated by `go run ./internal/cmd/ghgen`; DO NOT EDIT.

name: windows
on:
  push:
    branches:
      - "release/**"
      - "fullbuild"
      - "windowsbuild"
    tags:
      - "v*"
  schedule:
    - cron: "17 1 * * *"

jobs:
  build_windows_cli:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get GOVERSION content
        id: goversion
        run: echo ::set-output name=version::$(cat GOVERSION)
      - uses: magnetikonline/action-golang-cache@v4
        with:
          go-version: "${{ steps.goversion.outputs.version }}"
          cache-key-suffix: "-windows-${{ steps.goversion.outputs.version }}"

      - run: sudo apt-get update -q
      - run: sudo apt-get install -y mingw-w64

      - run: |
          echo -n $PSIPHON_CONFIG_KEY > ./internal/engine/psiphon-config.key
          echo $PSIPHON_CONFIG_JSON_AGE_BASE64 | base64 -d > ./internal/engine/psiphon-config.json.age
        env:
          PSIPHON_CONFIG_KEY: ${{ secrets.PSIPHON_CONFIG_KEY }}
          PSIPHON_CONFIG_JSON_AGE_BASE64: ${{ secrets.PSIPHON_CONFIG_JSON_AGE_BASE64 }}

      - run: make EXPECTED_MINGW_W64_VERSION="10-win32" CLI/windows

      - uses: actions/upload-artifact@v3
        with:
          name: ooniprobe-windows-386.exe
          path: ./CLI/ooniprobe-windows-386.exe

      - uses: actions/upload-artifact@v3
        with:
          name: ooniprobe-windows-amd64.exe
          path: ./CLI/ooniprobe-windows-amd64.exe

      - uses: actions/upload-artifact@v3
        with:
          name: miniooni-windows-386.exe
          path: ./CLI/miniooni-windows-386.exe

      - uses: actions/upload-artifact@v3
        with:
          name: miniooni-windows-amd64.exe
          path: ./CLI/miniooni-windows-amd64.exe

  test_windows_cli:
    runs-on: windows-2022
    needs: build_windows_cli
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: ooniprobe-windows-amd64.exe

      - run: ./E2E/ooniprobe.bash ./ooniprobe-windows-amd64.exe
        shell: bash

  publish_windows_cli:
    runs-on: ubuntu-22.04
    needs: test_windows_cli
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: ooniprobe-windows-386.exe

      - uses: actions/download-artifact@v3
        with:
          name: ooniprobe-windows-amd64.exe

      - uses: actions/download-artifact@v3
        with:
          name: miniooni-windows-386.exe

      - uses: actions/download-artifact@v3
        with:
          name: miniooni-windows-amd64.exe

      - run: ./script/ghpublish.bash ooniprobe-windows-386.exe ooniprobe-windows-amd64.exe miniooni-windows-386.exe miniooni-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# End of autogenerated file
